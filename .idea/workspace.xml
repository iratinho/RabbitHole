<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader">{
  &quot;useNewFormat&quot;: true
}</component>
  <component name="CMakeProjectFlavorService">
    <option name="flavorId" value="CMakePlainProjectFlavor" />
  </component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="RabbitHole" targetName="gtest_main" />
      <config projectName="RabbitHole" targetName="gmock" />
      <config projectName="RabbitHole" targetName="uninstall" />
      <config projectName="RabbitHole" targetName="Application" />
      <config projectName="RabbitHole" targetName="gmock_main" />
      <config projectName="RabbitHole" targetName="gtest" />
      <config projectName="RabbitHole" targetName="TestApplication" />
      <config projectName="RabbitHole" targetName="Engine" />
    </generated>
  </component>
  <component name="CMakeSettings" AUTO_RELOAD="true">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" GENERATION_DIR=".build" CONFIG_NAME="Debug" GENERATION_OPTIONS="-DCMAKE_INSTALL_PREFIX=../.build/generated_install/" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="7cd56f43-5590-4c88-9514-03172d699656" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Setup.sh" beforeDir="false" afterPath="$PROJECT_DIR$/Setup.sh" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/assimp" beforeDir="false" afterPath="$PROJECT_DIR$/external/assimp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/assimp/code/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/external/assimp/code/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/external/grpc/third_party/zlib/zconf.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/application/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/src/application/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/includes/Renderer/GraphBuilder.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/includes/Renderer/GraphBuilder.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/includes/Renderer/VulkanTranslator.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/includes/Renderer/VulkanTranslator.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/includes/window.hpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/includes/window.hpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Core/CameraSystem.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Core/CameraSystem.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Renderer/Device.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Renderer/Device.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Renderer/RenderSystemV2.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Renderer/RenderSystemV2.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Renderer/Texture2D.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Renderer/Texture2D.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Renderer/Vendor/Vulkan/VKDescriptorSetsManager.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Renderer/Vendor/Vulkan/VKDescriptorSetsManager.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Renderer/Vendor/Vulkan/VKDevice.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Renderer/Vendor/Vulkan/VKDevice.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/Renderer/Vendor/Vulkan/VKImageBuffer.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/Renderer/Vendor/Vulkan/VKImageBuffer.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/application.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/application.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/engine/src/window.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/engine/src/window.cpp" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="2.1" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2mG8YEEwOkGExCDxlKtlvBhs1V8" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;CMake Application.Application.executor&quot;: &quot;Debug&quot;,
    &quot;CMake Debug.Project.executor&quot;: &quot;Debug&quot;,
    &quot;CMake Debug.RabbitHole.executor&quot;: &quot;Debug&quot;,
    &quot;RunOnceActivity.RadMigrateCodeStyle&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.readMode.enableVisualFormatting&quot;: &quot;true&quot;,
    &quot;cf.first.check.clang-format&quot;: &quot;false&quot;,
    &quot;cidr.known.project.marker&quot;: &quot;true&quot;,
    &quot;ctest.advertisement.all.test.configuration.is.created&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;last_opened_file_path&quot;: &quot;/Users/iratinho/dev/RabbitHole/CMakeLists.txt&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;CMakeSettings&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunManager" selected="CMake Application.Application">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="TestApplication" type="CMakeGoogleTestRunConfigurationType" factoryName="Google Test" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="TestApplication" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="RabbitHole" RUN_TARGET_NAME="TestApplication" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Application" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="Application" CONFIG_NAME="Debug" RUN_TARGET_PROJECT_NAME="RabbitHole" RUN_TARGET_NAME="Application">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="Engine" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="Engine" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="gmock" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gmock_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="gmock_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="gtest" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="gtest_main" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="gtest_main" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="uninstall" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="RabbitHole" TARGET_NAME="uninstall" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="All CTest" type="CTestRunConfiguration" factoryName="CTestRun" PROGRAM_PARAMS="--extra-verbose" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" WORKING_DIR="file://$CMakeCurrentLocalGenerationDir$" PASS_PARENT_ENVS_2="true" RUN_PATH="$CTestCurrentExecutableName$" EXPLICIT_BUILD_TARGET_NAME="all" TEST_MODE="SUITE_TEST">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
        <option name="BeforeTestRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.gmock" />
      <item itemvalue="CMake Application.gmock_main" />
      <item itemvalue="CMake Application.gtest" />
      <item itemvalue="CMake Application.gtest_main" />
      <item itemvalue="CMake Application.uninstall" />
      <item itemvalue="CMake Application.Application" />
      <item itemvalue="CMake Application.Engine" />
      <item itemvalue="CTest Application.All CTest" />
      <item itemvalue="Google Test.TestApplication" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="7cd56f43-5590-4c88-9514-03172d699656" name="Changes" comment="" />
      <created>1726691597545</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1726691597545</updated>
      <workItem from="1726691598639" duration="6322000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
</project>